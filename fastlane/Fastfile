def get_version_code()
    return ENV["BUILD_NUMBER"].to_s
end
  
def get_version_name()
    buildNumber = ENV["BUILD_NUMBER"].to_f
    subversion = buildNumber % 1000
    version = buildNumber/1000
    return "1." + "%.f." % [version] + "%.f" % [subversion]
end
  
platform :ios do
    keychainPassword = "123456789"
    url = "https://actimi-dev@dev.azure.com/actimi-dev/actimi-app/_git/lifetech-apps-ios-certs"
    name = ENV["WORKSPACE_AND_SCHEME_NAME"]
    identifier = ENV["BUNDLE_IDENTIFIER"]
    certificateGitBranch = ENV["CERTIFICATES_GIT_BRANCH"]
    ext_identifier = identifier+".OneSignalNotificationServiceExtension"
    
    lane :setup_keychain do
        create_keychain(
            name: "fastlane_keychain",
            password: keychainPassword,
            default_keychain: true,
            unlock: true,
            timeout: 3600,
            lock_when_sleeps: false
        )
    end 
  
    lane :build_debug do
        cocoapods(podfile: "./ios/Podfile")
        build_app(
            build_path: "./",
            derived_data_path: "./",
            clean: true,
            scheme: name,
            configuration: "Debug",
            workspace: "./ios/" + name + ".xcworkspace",
            export_method: "ad-hoc",
            skip_package_ipa: true,
            xcargs: "CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY='' CODE_SIGNING_ALLOWED=NO"
        )
    end
  
    lane :build_release do
        setup_keychain()
        match(
            type: "appstore",
            readonly: true,
            team_id: "TR4973K4Q2",
            app_identifier: [identifier, ext_identifier],
            git_url: url,
            git_branch: certificateGitBranch,
            keychain_name: "fastlane_keychain",
            keychain_password: keychainPassword,
        )
        increment_version_number(
            version_number: get_version_name,
            xcodeproj: "./ios/" + name + ".xcodeproj"
        )
        increment_build_number(
            build_number: get_version_code,
            xcodeproj: "./ios/" + name + ".xcodeproj"
        )
        cocoapods(podfile: "./ios/Podfile")
        build_app(
            skip_profile_detection: true,
            build_path: "./",
            derived_data_path: "./",
            clean: true,
            scheme: name,
            export_method: "app-store",
            workspace: "./ios/" + name + ".xcworkspace",
            output_name: name,
            include_bitcode: false
        )
    end

    lane :inc_build_number do
        increment_version_number(
            version_number: get_version_name,
            xcodeproj: "./ios/" + name + ".xcodeproj"
        )
        increment_build_number(
            build_number: get_version_code,
            xcodeproj: "./ios/" + name + ".xcodeproj"
        )
    end
end
  
platform :android do
    lane :build_debug do
        gradle(
            task: "bundle",
            build_type: "Debug",
            project_dir: "./android"
        )
    end
  
    lane :build_release_aab do
        gradle(
            task: "bundle",
            build_type: "Release",
            project_dir: "./android",
            properties: {
                "versionCode" => get_version_code,
                "versionName" => get_version_name,
            }
        )
    end

    lane :build_release_apk do
        gradle(
            task: ":app:assemble",
            build_type: "Release",
            project_dir: "./android",
            properties: {
                "versionCode" => get_version_code,
                "versionName" => get_version_name,
            }
        )
    end
end
  